<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sql注入</title>
      <link href="/2020/07/23/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/07/23/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>我也是刚学习SQL注入，下面把我学习的一些知识做个整理，方便以后复习。</p><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="SQL注入介绍"><a href="#SQL注入介绍" class="headerlink" title="SQL注入介绍"></a>SQL注入介绍</h2><p>SQL注入：SQL Injection在这种攻击方式中，恶意代码被插入查询字符中，然后将该字符传递到数据库服务器进行执行，根据数<br>返回的结果，获得某些数据并进一步攻击,甚至获取管理账号，密码，窃取或者篡系统数据</p><h2 id="注入流程"><a href="#注入流程" class="headerlink" title="注入流程"></a>注入流程</h2><ul><li>判断是否纯在注入</li></ul><ol><li>可控参数的改变是否能影响页面显示结果</li><li>输入的sql语句是否能报错-能通过数据库的报错,暴露出一些数据库语句</li><li>输入sql语句能否不报错-我们的语句能够成功闭合</li></ol><ul><li>判断什么类型的注入</li></ul><ol><li>按照请求方式注入<ul><li>GET型注入</li><li>POST型注入</li></ul></li><li>按照SQL数据类型分类<ul><li>整型注入</li><li>字符注入</li></ul></li><li>其他数据类型<ul><li>报错注入</li><li>双注入</li><li>时间盲注</li><li>Cookie注入</li><li>User-Angent注入/Referer注入</li></ul></li></ol><ul><li>语句是否能够被恶意修改</li><li>是否能够成功执行</li><li>获取我们想要的数据<h2 id="按照SQLI-LABS靶机来做演示"><a href="#按照SQLI-LABS靶机来做演示" class="headerlink" title="按照SQLI-LABS靶机来做演示"></a>按照SQLI-LABS靶机来做演示</h2>下面我会用SQLI-LABS中的例子，介绍下面对不同类型的注入怎么去攻击和防御。<h3 id="GET型基于错误"><a href="#GET型基于错误" class="headerlink" title="GET型基于错误"></a>GET型基于错误</h3>首先判断是否存在注入<br>在url后面添加 <strong>?id=1</strong></li></ul><p><img src="/2020/07/23/sql%E6%B3%A8%E5%85%A5/1_url.png" alt="get注入"><br><img src="/2020/07/23/sql%E6%B3%A8%E5%85%A5/1_content.png" alt="get注入"></p>]]></content>
      
      
      <categories>
          
          <category> Web技术 </category>
          
          <category> 生活琐事 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>test_first</title>
      <link href="/2020/07/23/test-first/"/>
      <url>/2020/07/23/test-first/</url>
      
        <content type="html"><![CDATA[<h1 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h1><ul><li>第一</li><li>第二</li><li>第三<blockquote><p>引用<br>引用</p></blockquote></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql</title>
      <link href="/2020/07/23/myql/"/>
      <url>/2020/07/23/myql/</url>
      
        <content type="html"><![CDATA[<p>我也是刚学习SQL注入，下面把我学习的一些知识做个整理，方便以后复习。</p><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="SQL注入介绍"><a href="#SQL注入介绍" class="headerlink" title="SQL注入介绍"></a>SQL注入介绍</h2><p>SQL注入：SQL Injection在这种攻击方式中，恶意代码被插入查询字符中，然后将该字符传递到数据库服务器进行执行，根据数<br>返回的结果，获得某些数据并进一步攻击,甚至获取管理账号，密码，窃取或者篡系统数据</p><h2 id="注入流程"><a href="#注入流程" class="headerlink" title="注入流程"></a>注入流程</h2><ul><li>判断是否纯在注入</li></ul><ol><li>可控参数的改变是否能影响页面显示结果</li><li>输入的sql语句是否能报错-能通过数据库的报错,暴露出一些数据库语句</li><li>输入sql语句能否不报错-我们的语句能够成功闭合</li></ol><ul><li>判断什么类型的注入</li></ul><ol><li>按照请求方式注入<ul><li>GET型注入</li><li>POST型注入</li></ul></li><li>按照SQL数据类型分类<ul><li>整型注入</li><li>字符注入</li></ul></li><li>其他数据类型<ul><li>报错注入</li><li>双注入</li><li>时间盲注</li><li>Cookie注入</li><li>User-Angent注入/Referer注入</li></ul></li></ol><ul><li>语句是否能够被恶意修改</li><li>是否能够成功执行</li><li>获取我们想要的数据<h2 id="按照SQLI-LABS靶机来做演示"><a href="#按照SQLI-LABS靶机来做演示" class="headerlink" title="按照SQLI-LABS靶机来做演示"></a>按照SQLI-LABS靶机来做演示</h2>下面我会用SQLI-LABS中的例子，介绍下面对不同类型的注入怎么去攻击和防御。<h3 id="GET型基于错误"><a href="#GET型基于错误" class="headerlink" title="GET型基于错误"></a>GET型基于错误</h3>首先判断是否存在注入</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
